AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-list-aws

  Sample SAM Template for todo-list-aws

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Runtime: python3.7
    #Timeout: 180
    Environment:
      Variables:
        DYNAMODB_TABLE: !Sub "todosTable-${Stage}"
        ENVIRONMENT: !Ref Stage
        
Parameters:
  Stage:
    Type: String
    Default: default
    AllowedValues:
      - default
      - staging
      - production
    Description: Ingrese el entorno a desplegar (staging o production). Por defecto es default.

Resources:
  ListFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: list.list
      Events:
        List:
          Type: Api
          Properties:
            Path: /todos
            Method: get
      Policies:
        Statement:
          Effect: Allow
          Action:
           - 'dynamodb:Query'
           - 'dynamodb:Scan'
           - 'dynamodb:GetItem'
           - 'dynamodb:PutItem'
           - 'dynamodb:UpdateItem'
           - 'dynamodb:DeleteItem'
          Resource:
             !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/todosTable-${Stage}"
  CreateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: create.create
      Events:
        Create:
          Type: Api
          Properties:
            Path: /todos
            Method: post
      Policies:
        Statement:
         Effect: Allow
         Action:
           - 'dynamodb:Query'
           - 'dynamodb:Scan'
           - 'dynamodb:GetItem'
           - 'dynamodb:PutItem'
           - 'dynamodb:UpdateItem'
           - 'dynamodb:DeleteItem'
         Resource:
           !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/todosTable-${Stage}"
             
  TranslateFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: translate.translate
      Events:
        Translate:
          Type: Api
          Properties:
            Path: /todos/{id}/{lang}
            Method: get
      Policies:
        Statement:
         Effect: Allow
         Action:
           - 'dynamodb:Query'
           - 'dynamodb:Scan'
           - 'dynamodb:GetItem'
           - 'dynamodb:PutItem'
           - 'dynamodb:UpdateItem'
           - 'dynamodb:DeleteItem'
         Resource:
            !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/todosTable-${Stage}"

  todosTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: !Sub "todosTable-${Stage}"
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ListApi:
    Description: "API Gateway endpoint URL for Prod stage for List function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/todos/"
  ListFunction:
    Description: "List Lambda Function ARN"
    Value: !GetAtt ListFunction.Arn
  ListFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt ListFunctionRole.Arn

